// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using dm_bot.Contexts;

namespace dm_bot.Migrations
{
    [DbContext(typeof(DMContext))]
    [Migration("20190508003532_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.2.2-servicing-10034")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("dm_bot.Models.DungeonMasterAvailability", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ChatCommChannel");

                    b.Property<string>("ChronusTimeLink");

                    b.Property<int>("CombatPercent");

                    b.Property<string>("DungeonMasterUserName");

                    b.Property<int>("MaxHours");

                    b.Property<int>("MinHours");

                    b.Property<string>("MiscellaneousText");

                    b.Property<DateTime>("PlayDate");

                    b.Property<DateTimeOffset>("PlayDateOffset");

                    b.Property<int>("RoleplayingPercent");

                    b.Property<string>("Roll20Link");

                    b.Property<string>("VoiceCommChannel");

                    b.HasKey("Id");

                    b.ToTable("DungeonMasterAvailabilities");
                });

            modelBuilder.Entity("dm_bot.Models.Item", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal>("CopperCost");

                    b.Property<decimal>("ElectrumCost");

                    b.Property<decimal>("GoldCost");

                    b.Property<bool>("IsTradeOnly");

                    b.Property<string>("Name");

                    b.Property<decimal>("SellValue");

                    b.Property<decimal>("SilverCost");

                    b.HasKey("Id");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("dm_bot.Models.Job", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal>("AuthorId")
                        .HasConversion(new ValueConverter<decimal, decimal>(v => default(decimal), v => default(decimal), new ConverterMappingHints(precision: 20, scale: 0)));

                    b.Property<string>("AuthorMention");

                    b.Property<string>("Description");

                    b.Property<string>("Difficulty");

                    b.Property<int?>("DungeonMasterAvailabilityId");

                    b.Property<string>("FirstApproval");

                    b.Property<decimal>("FirstApprovalId")
                        .HasConversion(new ValueConverter<decimal, decimal>(v => default(decimal), v => default(decimal), new ConverterMappingHints(precision: 20, scale: 0)));

                    b.Property<string>("JobLink");

                    b.Property<bool>("Personal");

                    b.Property<bool>("Repeatable");

                    b.Property<string>("SecondApproval");

                    b.Property<decimal>("SecondApprovalId")
                        .HasConversion(new ValueConverter<decimal, decimal>(v => default(decimal), v => default(decimal), new ConverterMappingHints(precision: 20, scale: 0)));

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.HasIndex("DungeonMasterAvailabilityId");

                    b.ToTable("Jobs");
                });

            modelBuilder.Entity("dm_bot.Models.Lobby", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AvailabilityId");

                    b.Property<int>("PlayerId");

                    b.HasKey("Id");

                    b.HasIndex("AvailabilityId");

                    b.HasIndex("PlayerId")
                        .IsUnique();

                    b.ToTable("Lobbies");
                });

            modelBuilder.Entity("dm_bot.Models.Player", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CharacterName");

                    b.Property<decimal>("Copper");

                    b.Property<string>("DiscordMention");

                    b.Property<decimal>("Electrum");

                    b.Property<decimal>("Gold");

                    b.Property<int>("Pips");

                    b.Property<decimal>("Silver");

                    b.HasKey("Id");

                    b.ToTable("Players");
                });

            modelBuilder.Entity("dm_bot.Models.Rank", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("JobId");

                    b.Property<string>("RankLetter");

                    b.Property<string>("RankMention");

                    b.Property<string>("RankName");

                    b.HasKey("Id");

                    b.HasIndex("JobId");

                    b.ToTable("Ranks");
                });

            modelBuilder.Entity("dm_bot.Models.Job", b =>
                {
                    b.HasOne("dm_bot.Models.DungeonMasterAvailability")
                        .WithMany("ScheduledJobs")
                        .HasForeignKey("DungeonMasterAvailabilityId");
                });

            modelBuilder.Entity("dm_bot.Models.Lobby", b =>
                {
                    b.HasOne("dm_bot.Models.DungeonMasterAvailability", "Availability")
                        .WithMany()
                        .HasForeignKey("AvailabilityId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("dm_bot.Models.Player", "Player")
                        .WithOne("Lobby")
                        .HasForeignKey("dm_bot.Models.Lobby", "PlayerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("dm_bot.Models.Rank", b =>
                {
                    b.HasOne("dm_bot.Models.Job")
                        .WithMany("TaggedRanks")
                        .HasForeignKey("JobId");
                });
#pragma warning restore 612, 618
        }
    }
}
